/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package worldcupapp;

import javax.swing.JOptionPane;

/**
 *
 * @author Nathan Ryan x13448212 Group 7
 */
public class Fixtures extends javax.swing.JFrame {

    //variables
    String searchType, Group, fix1, fix2, fix3;

    //declare array of objects
    TeamSearch[] arr;

    //declare counter
    int count;

    /**
     * Creates new form Fixtures
     */
    public Fixtures() {
        initComponents();

        //create array
        arr = new TeamSearch[100];
        //initialise count to 0
        count = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jScrollBar1 = new javax.swing.JScrollBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        searchLbl = new javax.swing.JLabel();
        homeBtn1 = new javax.swing.JButton();
        taskbar = new javax.swing.JLabel();
        groupBtn = new javax.swing.JButton();
        secondBtn = new javax.swing.JButton();
        quartersBtn = new javax.swing.JButton();
        semisBtn = new javax.swing.JButton();
        finalBtn = new javax.swing.JButton();
        playOffBtn = new javax.swing.JButton();
        btn = new javax.swing.JButton();
        fixturesLbl1 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchLbl.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        searchLbl.setForeground(new java.awt.Color(255, 255, 255));
        searchLbl.setText("Search for a team:");
        jLayeredPane1.add(searchLbl);
        searchLbl.setBounds(30, 560, 170, 50);

        homeBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fixtures/home.png"))); // NOI18N
        homeBtn1.setOpaque(false);
        btn.setOpaque(false);
        btn.setContentAreaFilled( false );
        btn.setBorder( null );
        homeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtn1ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(homeBtn1);
        homeBtn1.setBounds(270, 10, 70, 50);

        taskbar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Taskbar.png"))); // NOI18N
        jLayeredPane1.add(taskbar);
        taskbar.setBounds(0, -10, 360, 140);

        groupBtn.setText("Group Stage");
        groupBtn.setPreferredSize(new java.awt.Dimension(50, 23));
        groupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(groupBtn);
        groupBtn.setBounds(60, 140, 250, 50);

        secondBtn.setText("Round Of 16");
        secondBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(secondBtn);
        secondBtn.setBounds(60, 210, 250, 50);

        quartersBtn.setText("Quarters");
        quartersBtn.setPreferredSize(new java.awt.Dimension(75, 75));
        quartersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quartersBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(quartersBtn);
        quartersBtn.setBounds(60, 280, 250, 50);

        semisBtn.setText("Semi Finals");
        semisBtn.setPreferredSize(new java.awt.Dimension(50, 23));
        semisBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semisBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(semisBtn);
        semisBtn.setBounds(60, 350, 250, 50);

        finalBtn.setText("Final");
        finalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(finalBtn);
        finalBtn.setBounds(60, 490, 250, 50);

        playOffBtn.setText("3rd Place Play Off");
        playOffBtn.setPreferredSize(new java.awt.Dimension(75, 75));
        playOffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playOffBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(playOffBtn);
        playOffBtn.setBounds(60, 420, 250, 50);

        btn.setText("TV");
        btn.setOpaque(false);
        ;
        jLayeredPane1.add(btn);
        btn.setBounds(10, 10, 70, 50);

        fixturesLbl1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        fixturesLbl1.setForeground(new java.awt.Color(255, 255, 255));
        fixturesLbl1.setText("Fixtures");
        jLayeredPane1.add(fixturesLbl1);
        fixturesLbl1.setBounds(130, 60, 160, 50);

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(searchBtn);
        searchBtn.setBounds(210, 570, 80, 30);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg.png"))); // NOI18N
        jLayeredPane1.add(bg);
        bg.setBounds(0, 0, 360, 640);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void groupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupBtnActionPerformed
        GroupFixtures g = new GroupFixtures();
        g.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_groupBtnActionPerformed

    private void quartersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quartersBtnActionPerformed
        Quarters q = new Quarters();
        q.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_quartersBtnActionPerformed

    private void playOffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playOffBtnActionPerformed
        PlayOff p = new PlayOff();
        p.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_playOffBtnActionPerformed

    private void secondBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondBtnActionPerformed
        Round16 rs = new Round16();
        rs.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_secondBtnActionPerformed

    private void semisBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semisBtnActionPerformed
        SemiFinal sf = new SemiFinal();
        sf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_semisBtnActionPerformed

    private void finalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalBtnActionPerformed

        WCFinal fi = new WCFinal();
        fi.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_finalBtnActionPerformed

    private void homeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtn1ActionPerformed
        HomeScreen h = new HomeScreen();
        h.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_homeBtn1ActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here: 
        String searchType = JOptionPane.showInputDialog(null, "Please enter a team");

        //declare Assessment object
        TeamSearch ts;
        //create assessment object
        ts = new TeamSearch();

        if (searchType.equalsIgnoreCase("Brazil")) {
            //adding details to the object
            ts.setGroup("Brazil are based in Group A");
            ts.setFix1("12/06 17:00			Brazil	-	Croatia	");
            ts.setFix2("17/06 16:00			Brazil	-	Mexico	");
            ts.setFix3("23/06 17:00			Cameroon -	Brazil");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Mexico")) {
            //adding details to the object
            ts.setGroup("Mexico are based in Group A");
            ts.setFix1("13/06 13:00			Mexico	-	Cameroon");
            ts.setFix2("17/06 16:00			Brazil	-	Mexico");
            ts.setFix3("23/06 17:00			Croatia	-	Mexico	");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Croatia")) {
            //adding details to the object
            ts.setGroup("Croatia are based in Group A");
            ts.setFix1("12/06 17:00			Brazil	-	Croatia	");
            ts.setFix2("18/06 18:00			Cameroon	-	Croatia");
            ts.setFix3("23/06 17:00			Croatia	-	Mexico	");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Cameroon")) {
            //adding details to the object
            ts.setGroup("Cameroon are based in Group A");
            ts.setFix1("13/06 13:00			Mexico	-	Cameroon");
            ts.setFix2("18/06 18:00			Cameroon	-	Croatia	");
            ts.setFix3("23/06 17:00			Cameroon	-	Brazil	");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Netherlands")) {
            //adding details to the object
            ts.setGroup("Netherlands are based in Group B");
            ts.setFix1("13/06 16:00			Spain	-	Netherlands");
            ts.setFix2("18/06 13:00			Australia	-	Netherlands	");
            ts.setFix3("23/06 13:00			Netherlands	-	Chile");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Holland")) {
            //adding details to the object
            ts.setGroup("Netherlands are based in Group B");
            ts.setFix1("13/06 16:00			Spain	-	Netherlands");
            ts.setFix2("18/06 13:00			Australia	-	Netherlands	");
            ts.setFix3("23/06 13:00			Netherlands	-	Chile");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Spain")) {
            //adding details to the object
            ts.setGroup("Spain are based in Group B");
            ts.setFix1("13/06 16:00		Spain	-	Netherlands");
            ts.setFix2("18/06 16:00		Spain	-	Chile");
            ts.setFix3("23/06 13:00		Australia	-	Spain");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Chile")) {
            //adding details to the object
            ts.setGroup("Chile are based in Group B");
            ts.setFix1("13/06 18:00		Chile	-	Australia");
            ts.setFix2("18/06 16:00		Spain	-	Chile");
            ts.setFix3("23/06 13:00		Netherlands	-	Chile");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Australia")) {
            //adding details to the object
            ts.setGroup("Australia are based in Group B");
            ts.setFix1("13/06 18:00		Chile	-	Australia");
            ts.setFix2("18/06 13:00		Australia	-	Netherlands");
            ts.setFix3("23/06 13:00		Australia	-	Spain");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Colombia")) {
            //adding details to the object
            ts.setGroup("Colombia are based in Group C");
            ts.setFix1("14/06 13:00	 		Colombia	-	Greece");
            ts.setFix2("19/06 13:00			Colombia	-	Côte d'Ivoire");
            ts.setFix3("24/06 16:00			Japan	-	Colombia");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Greece")) {
            //adding details to the object
            ts.setGroup("Greece are based in Group C");
            ts.setFix1("14/06 13:00	 		Colombia	-	Greece	");
            ts.setFix2("19/06 19:00			Japan	-	Greece");
            ts.setFix3("24/06 17:00			Greece	-	Côte d'Ivoire");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Ivory Coast")) {
            //adding details to the object
            ts.setGroup("Ivory Coast are based in Group C");
            ts.setFix1("14/06 22:00			Côte d'Ivoire	-	Japan");
            ts.setFix2("19/06 13:00			Colombia	-	Côte d'Ivoire	");
            ts.setFix3("24/06 17:00			Greece	-	Côte d'Ivoire");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Japan")) {
            //adding details to the object
            ts.setGroup("Japan are based in Group C");
            ts.setFix1("14/06 22:00			Côte d'Ivoire	-	Japan");
            ts.setFix2("19/06 19:00			Japan	-	Greece	");
            ts.setFix3("24/06 16:00			Japan	-	Colombia");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Uruguay")) {
            //adding details to the object
            ts.setGroup("Uruguay are based in Group D");
            ts.setFix1("14/06 16:00			Uruguay	-	Costa Rica");
            ts.setFix2("19/06 16:00	 		Uruguay	-	England");
            ts.setFix3("24/06 13:00			Italy	-	Uruguay");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Costa Rica")) {
            //adding details to the object
            ts.setGroup("Costa Rica are based in Group D");
            ts.setFix1("14/06 16:00			Uruguay	-	Costa Rica");
            ts.setFix2("20/06 13:00			Italy	-	Costa Rica");
            ts.setFix3("24/06 13:00	 		Costa Rica	-	England	");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("England")) {
            //adding details to the object
            ts.setGroup("England are based in Group D");
            ts.setFix1("14/06 18:00			England	-	Italy");
            ts.setFix2("19/06 16:00	 		Uruguay	-	England");
            ts.setFix3("24/06 13:00	 		Costa Rica	-	England");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Italy")) {
            //adding details to the object
            ts.setGroup("Italy are based in Group D");
            ts.setFix1("14/06 18:00			England	-	Italy");
            ts.setFix2("20/06 13:00			Italy	-	Costa Rica");
            ts.setFix3("24/06 13:00			Italy	-	Uruguay	");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Switzerland")) {
            //adding details to the object
            ts.setGroup("Switzerland are based in Group E");
            ts.setFix1("15/06 13:00			Switzerland	-	Ecuador");
            ts.setFix2("20/06 16:00			Switzerland	-	France");
            ts.setFix3("25/06 16:00			Honduras	-	Switzerland");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Ecuador")) {
            //adding details to the object
            ts.setGroup("Ecuador are based in Group E");
            ts.setFix1("15/06 13:00			Switzerland	-	Ecuador");
            ts.setFix2("20/06 19:00			Honduras	-	Ecuador");
            ts.setFix3("25/06 17:00	  		Ecuador	-	France");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("France")) {
            //adding details to the object
            ts.setGroup("France are based in GROUP E");
            ts.setFix1("15/06 16:00	France	-	Honduras");
            ts.setFix2("20/06 16:00	Switzerland	-	France");
            ts.setFix3("25/06 17:00	Ecuador	-	France");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Honduras")) {
            //adding details to the object
            ts.setGroup("Honduras are based in Group E");
            ts.setFix1("15/06 16:00	 		France	-	Honduras");
            ts.setFix2("20/06 19:00			Honduras	-	Ecuador");
            ts.setFix3("25/06 16:00			Honduras	-	Switzerland");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Argentina")) {
            //adding details to the object
            ts.setGroup("Argentina are based in Group F");
            ts.setFix1("15/06 19:00	  		Argentina	-	Bosnia and Herzegovina");
            ts.setFix2("21/06 13:00	 		Argentina	-	Iran");
            ts.setFix3("25/06 13:00	 		Nigeria	-	Argentina");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Bosnia")) {
            //adding details to the object
            ts.setGroup("Bosnia are based in Group F");
            ts.setFix1("15/06 19:00	  		Argentina	-	Bosnia and Herzegovina");
            ts.setFix2("21/06 18:00			Nigeria	-	Bosnia and Herzegovina");
            ts.setFix3("25/06 13:00			Bosnia and Herzegovina	-	Iran");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Iran")) {
            //adding details to the object
            ts.setGroup("Iran are based in Group F");
            ts.setFix1("16/06 16:00			Iran	-	Nigeria	");
            ts.setFix2("21/06 13:00	 		Argentina	-	Iran");
            ts.setFix3("25/06 13:00			Bosnia and Herzegovina	-	Iran");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Nigeria")) {
            //adding details to the object
            ts.setGroup("Nigeria are based in Group F");
            ts.setFix1("16/06 16:00			Iran	-	Nigeria");
            ts.setFix2("21/06 18:00			Nigeria	-	Bosnia and Herzegovina");
            ts.setFix3("25/06 13:00	 		Nigeria	-	Argentina");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Germany")) {
            //adding details to the object
            ts.setGroup("Germany are based in Group G");
            ts.setFix1("16/06 13:00			Germany	-	Portugal");
            ts.setFix2("21/06 16:00			Germany	-	Ghana");
            ts.setFix3("26/06 13:00			USA	-	Germany");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Portugal")) {
            //adding details to the object
            ts.setGroup("Portugal are based in Group G");
            ts.setFix1("16/06 13:00			Germany	-	Portugal");
            ts.setFix2("22/06 18:00			USA	-	Portugal");
            ts.setFix3("26/06 13:00			Portugal	-	Ghana");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Ghana")) {
            //adding details to the object
            ts.setGroup("Ghana are based in Group G");
            ts.setFix1("16/06 19:00			Ghana	-	USA");
            ts.setFix2("21/06 16:00			Germany	-	Ghana");
            ts.setFix3("26/06 13:00			Portugal	-	Ghana");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("USA")) {
            //adding details to the object
            ts.setGroup("USA are based in Group G");
            ts.setFix1("16/06 19:00			Ghana	-	USA");
            ts.setFix2("22/06 18:00			USA	-	Portugal");
            ts.setFix3("26/06 13:00			USA	-	Germany");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("United States")) {
            //adding details to the object
            ts.setGroup("USA are based in Group G");
            ts.setFix1("16/06 19:00			Ghana	-	USA");
            ts.setFix2("22/06 18:00			USA	-	Portugal");
            ts.setFix3("26/06 13:00			USA	-	Germany");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("America")) {
            //adding details to the object
            ts.setGroup("USA are based in Group G");
            ts.setFix1("16/06 19:00			Ghana	-	USA");
            ts.setFix2("22/06 18:00			USA	-	Portugal");
            ts.setFix3("26/06 13:00			USA	-	Germany");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Belgium")) {
            //adding details to the object
            ts.setGroup("Belgium are based in Group H");
            ts.setFix1("7/06 13:00	 		Belgium	-	Algeria");
            ts.setFix2("22/06 13:00	  		Belgium	-	Russia");
            ts.setFix3("26/06 17:00	 		Korea Republic	-	Belgium	");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Algeria")) {
            //adding details to the object
            ts.setGroup("Algeria are based in Group H");
            ts.setFix1("7/06 13:00	 		Belgium	-	Algeria");
            ts.setFix2("22/06 16:00	 		Korea Republic	-	Algeria");
            ts.setFix3("26/06 17:00			Algeria	-	Russia");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Russia")) {
            //adding details to the object
            ts.setGroup("Russia are based in Group H");
            ts.setFix1("17/06 18:00			Russia	-	Korea Republic");
            ts.setFix2("22/06 13:00	  		Belgium	-	Russia");
            ts.setFix3("26/06 17:00			Algeria	-	Russia");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("South Korea")) {
            //adding details to the object
            ts.setGroup("South Korea are based in Group H");
            ts.setFix1("17/06 18:00			Russia	-	Korea Republic");
            ts.setFix2("22/06 16:00	 		Korea Republic	-	Algeria");
            ts.setFix3("26/06 17:00	 		Korea Republic	-	Belgium");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Korea")) {
            //adding details to the object
            ts.setGroup("South Korea are based in Group H");
            ts.setFix1("17/06 18:00			Russia	-	Korea Republic");
            ts.setFix2("22/06 16:00	 		Korea Republic	-	Algeria");
            ts.setFix3("26/06 17:00	 		Korea Republic	-	Belgium");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n " + ts.getFix1() + "\n " + ts.getFix2() + "\n " + ts.getFix3());

        } else if (searchType.equalsIgnoreCase("Ireland")) {
            //adding details to the object
            ts.setGroup("Ireland didn't qualify this year :(");

            //adding object to the array
            arr[count] = ts;
            //increment counter
            count++;

            JOptionPane.showMessageDialog(null, " " + ts.getGroup() + "\n ");

        } else {
            JOptionPane.showMessageDialog(null, "This is not a valid search term");
        }


    }//GEN-LAST:event_searchBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fixtures().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton btn;
    private javax.swing.JButton finalBtn;
    private javax.swing.JLabel fixturesLbl1;
    private javax.swing.JButton groupBtn;
    private javax.swing.JButton homeBtn1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JButton playOffBtn;
    private javax.swing.JButton quartersBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchLbl;
    private javax.swing.JButton secondBtn;
    private javax.swing.JButton semisBtn;
    private javax.swing.JLabel taskbar;
    // End of variables declaration//GEN-END:variables
}
